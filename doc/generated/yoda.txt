usage: yoda [-h] [-v] [-f FORMAT] [-lf] [-m MACHINE] [-c CONFIG]
            [-bd BUILDDIRS [BUILDDIRS ...]] [-i IMAGE] [-d DATE]
            [-mtd META_TOP_DIR] [-ip MANAGED_IMAGEPACKAGE] [-ia]
            [-p MANAGED_PACKAGE] [-sps MANAGED_SUB_PACKAGES] [-ic]
            mode

NAME
  Yoda (Yocto Dependencies Analyser)

DESCRIPTION
  yoda compiles license compliance related information from a Yocto build (for later use by yoga and yocr)

positional arguments:
  mode                  list, exportpackage, find, create-config

optional arguments:
  -h, --help            show this help message and exit
  -v, --verbose         output verbose information to stderr
  -f FORMAT, --format FORMAT
                        output result in specified format, default is JSON
  -lf, --list-formats   list supported formats
  -m MACHINE, --machine MACHINE
                        machine of Yocto build, default is qemux86-64
  -c CONFIG, --config CONFIG
                        Use settings from configuration file
  -bd BUILDDIRS [BUILDDIRS ...], --build-directories BUILDDIRS [BUILDDIRS ...]
                        distribution directories, default is tmp/work/core2-64-poky-linux tmp/work/all-poky-linux tmp/work/qemux86_64-poky-linux
  -i IMAGE, --image IMAGE
                        image, default is core-image-minimal-qemux86-64
  -d DATE, --date DATE  date of build
  -mtd META_TOP_DIR, --meta-top-dir META_TOP_DIR
                        directory containing for meta directories, default is ../
  -ip MANAGED_IMAGEPACKAGE, --imagepackage MANAGED_IMAGEPACKAGE
                        imagepackage to handle
  -ia, --imagepackages-packages
                        handle all packages as found via imagepackage list
  -p MANAGED_PACKAGE, --package MANAGED_PACKAGE
                        packge to handle
  -sps MANAGED_SUB_PACKAGES, --sub-packages MANAGED_SUB_PACKAGES
                        sub packages (requires package) to handle
  -ic, --include-libc   include glibc libraries as dependencies

EXAMPLES

  Find settings for yoda, store in yoda.conf
    yoda -i core-image-minimal create-config

  Create a JSON file with all packages and image packages (sub packages) for image core-image-minimal
    yoda -c yoda.conf list

  Create JSON files for all Cairo's 
    yoda -c yoda.conf -p cairo exportpackagel

  Create JSON files for Cairo's imagepackage cairo-gobject
    yoda -c yoda.conf -p cairo -sp cairo-gobject exportpackagel

AUTHOR
  Henrik Sandklef

REPORTING BUGS
  File a ticket at https://github.com/vinland-technology/compliance-utils

COPYRIGHT
  Copyright (c) 2020 Henrik Sandklef<hesa@sandklef.com>.
  License GPL-3.0-or-later

SEE ALSO
  yoga (yoda's generic aggregator)
  yocr (yoga's compliance reporter)
  flict (FOSS License Compatibility Tool)
